import { Area } from "../area";
import { HalfPlane } from "./half-plane";
import { Point } from "../../geometry/point";
import { PolygonVertex } from "./polygon-vertex";
import { Transformation } from "../../transformation";
import { HalfPlaneLineIntersection } from "./half-plane-line-intersection";
import { LineSegment } from "../line/line-segment";
import { Ray } from "../line/ray";
import { Line } from "../line/line";
export declare class ConvexPolygon implements Area {
    vertices?: PolygonVertex[];
    readonly halfPlanes: HalfPlane[];
    constructor(halfPlanes: HalfPlane[], vertices?: PolygonVertex[]);
    private findVertex;
    intersects(other: Area): boolean;
    intersectWith(area: Area): Area;
    intersectWithRay(ray: Ray): Area;
    intersectWithLine(line: Line): Area;
    intersectWithLineSegment(other: LineSegment): Area;
    contains(other: Area): boolean;
    private containsHalfPlane;
    isContainedByHalfPlane(halfPlane: HalfPlane): boolean;
    getPointInFrontInDirection(point: Point, direction: Point): Point;
    expandToIncludePoint(point: Point): ConvexPolygon;
    expandToIncludeInfinityInDirection(direction: Point): Area;
    getIntersectionsWithLine(point: Point, direction: Point): HalfPlaneLineIntersection[];
    expandByDistance(distance: number): ConvexPolygon;
    transform(transformation: Transformation): ConvexPolygon;
    intersectWithConvexPolygon(convexPolygon: ConvexPolygon): ConvexPolygon;
    containsInfinityInDirection(direction: Point): boolean;
    containsPoint(point: Point): boolean;
    intersectsRay(ray: Ray): boolean;
    intersectsLineSegment(lineSegment: LineSegment): boolean;
    intersectsLine(line: Line): boolean;
    intersectsConvexPolygon(other: ConvexPolygon): boolean;
    private isOutsideConvexPolygon;
    private hasAtMostOneVertex;
    private getTangentPlanesThroughInfinityInDirection;
    isContainedByRay(ray: Ray): boolean;
    isContainedByLineSegment(other: LineSegment): boolean;
    isContainedByLine(line: Line): boolean;
    isContainedByConvexPolygon(other: ConvexPolygon): boolean;
    private static getHalfPlanes;
    private static getVerticesNotContainingAnyOther;
    private static getHalfPlanesNotContainingAnyOther;
    private static groupVerticesByPoint;
    private static getVertices;
    static createTriangleWithInfinityInTwoDirections(point: Point, direction1: Point, direction2: Point): ConvexPolygon;
    static createFromHalfPlane(halfPlane: HalfPlane): ConvexPolygon;
    static createTriangleWithInfinityInDirection(point1: Point, point2: Point, direction: Point): ConvexPolygon;
    static createTriangle(point1: Point, point2: Point, point3: Point): ConvexPolygon;
    static createRectangle(x: number, y: number, width: number, height: number): ConvexPolygon;
}
